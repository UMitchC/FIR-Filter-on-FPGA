// accelerometer.v

// Generated using ACDS version 20.1 720

`timescale 1 ps / 1 ps
module accelerometer (
		input  wire       address,       // avalon_accelerometer_spi_mode_slave.address
		input  wire       byteenable,    //                                    .byteenable
		input  wire       read,          //                                    .read
		input  wire       write,         //                                    .write
		input  wire [7:0] writedata,     //                                    .writedata
		output wire [7:0] readdata,      //                                    .readdata
		output wire       waitrequest,   //                                    .waitrequest
		input  wire       clk,           //                                 clk.clk
		inout  wire       I2C_SDAT,      //                  external_interface.I2C_SDAT
		output wire       I2C_SCLK,      //                                    .I2C_SCLK
		output wire       G_SENSOR_CS_N, //                                    .G_SENSOR_CS_N
		input  wire       G_SENSOR_INT,  //                                    .G_SENSOR_INT
		output wire       irq,           //                           interrupt.irq
		input  wire       reset          //                               reset.reset
	);

	accelerometer_accelerometer_spi_0 accelerometer_spi_0 (
		.clk           (clk),           //                                 clk.clk
		.reset         (reset),         //                               reset.reset
		.address       (address),       // avalon_accelerometer_spi_mode_slave.address
		.byteenable    (byteenable),    //                                    .byteenable
		.read          (read),          //                                    .read
		.write         (write),         //                                    .write
		.writedata     (writedata),     //                                    .writedata
		.readdata      (readdata),      //                                    .readdata
		.waitrequest   (waitrequest),   //                                    .waitrequest
		.irq           (irq),           //                           interrupt.irq
		.I2C_SDAT      (I2C_SDAT),      //                  external_interface.export
		.I2C_SCLK      (I2C_SCLK),      //                                    .export
		.G_SENSOR_CS_N (G_SENSOR_CS_N), //                                    .export
		.G_SENSOR_INT  (G_SENSOR_INT)   //                                    .export
	);

endmodule
